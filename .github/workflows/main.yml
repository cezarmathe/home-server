# main.yml

name: 'main'

on:
  push:
    branches:
    - master

jobs:
  main:
    name: main
    runs-on: ubuntu-20.04

    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner.
    - name: Checkout
      uses: actions/checkout@v2

    # Initialize the environment.
    - name: Init
      env:
        AGE_VERSION: v1.0.0-rc.3
      run: |
        # add the hashicorp apt repository
        curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
        sudo apt-add-repository "deb [arch=$(dpkg --print-architecture)] https://apt.releases.hashicorp.com $(lsb_release -cs) main"

        # install required packages
        sudo apt update
        sudo apt install --yes terraform wireguard-tools

        # install age
        curl -fsSLO https://github.com/FiloSottile/age/releases/download/${AGE_VERSION}/age-${AGE_VERSION}-linux-amd64.tar.gz
        tar xf age-${AGE_VERSION}-linux-amd64.tar.gz
        sudo mv age/age /usr/local/bin/age
        sudo mv age/age-keygen /usr/local/bin/age-keygen
        rm age-${AGE_VERSION}-linux-amd64.tar.gz
        printf "%s\n" "age $(age --version)"
        printf "%s\n" "age-keygen $(age-keygen --version)"

    # Put secrets in their proper place.
    - name: Install secrets
      env:
        AGE_PRIVATE_KEY: ${{ secrets.AGE_PRIVATE_KEY }}
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        WG_PRIVATE_KEY: ${{ secrets.WG_PRIVATE_KEY }}
        WG_CONF: ${{ secrets.WG_CONF }}
        SERVER_HOST: ${{ secrets.SERVER_HOST }}
        SERVER_PUBLIC_KEY: ${{ secrets.SERVER_PUBLIC_KEY }}
        GCLOUD_PRIVATE_KEY: ${{ secrets.GCLOUD_PRIVATE_KEY }}
      run: |
        mkdir -p ~/.age
        printf "%s" "${AGE_PRIVATE_KEY}" | tee ~/.age/key >/dev/null
        chmod 400 ~/.age/key

        mkdir -p ~/.ssh
        printf "%s" "${SSH_PRIVATE_KEY}" | tee ~/.ssh/id_ed25519 >/dev/null
        printf "%s" "${SERVER_HOST} ${SERVER_PUBLIC_KEY}" | tee ~/.ssh/known_hosts
        chmod 400 ~/.ssh/id_ed25519

        sudo mkdir -p /etc/wireguard
        printf "%s" "${WG_PRIVATE_KEY}" | sudo tee /etc/wireguard/privatekey >/dev/null
        printf "%s" "${WG_CONF}" | sudo tee /etc/wireguard/wg0.conf >/dev/null
        sudo chmod -R 400 /etc/wireguard

        mkdir -p ~/.gcloud
        printf "%s" "${GCLOUD_PRIVATE_KEY}" | tee ~/.gcloud/key.json
        chmod 400 ~/.gcloud/key.json

    # Connect to the VPN of the server.
    - name: Connect to the VPN
      env:
        SERVER_HOST: ${{ secrets.SERVER_HOST }}
        SERVER_USER: ${{ secrets.SERVER_USER }}
      run: |
        sudo systemctl enable --now wg-quick@wg0
        ssh ${SERVER_USER}@${SERVER_HOST} && echo "Connected successfully."

    - name: Initialize the Terraform backend
      env:
        GOOGLE_APPLICATION_CREDENTIALS: ~/.gcloud/key.json
      run: |
        make init
